2я домашка по JS со звездочками:

1. Написать скриптик, который сосчитает и выведет результат от возведения 2 в степень 10, начиная со степени 1

/ Напишем цикл, в котором будет просчитываться степень возведения:
    // объявим переменную i с числовым значением 1, так как по условиям задачи начинаем со степени 1 (эта степень и будет меняться в зависимости от условия) 
    // прописываем условие, при котором будет работать тело цикла, т.е. степень <=10; 
    // если условие истинно, происходит инкрементация, т.е. прибавление значения к переменной i в каждой итерации 
for (let i = 1; i <= 10; i++){
    // тело цикла: вывод в консоль значения 2, возведенное в степень (**) i
    console.log(2**i);}

1*. Преобразовать 1 задачу в функцию, принимающую на вход степень, в которую будет возводиться число 2


// Преобразовать 1 задачу в функцию, принимающую на вход степень, в которую будет возводиться число 2

// создадим функцию со входным параметром a(число), b(степень)
function result(a, b) {
    // тело функции: вывести в консоль число а, возведенное в степень (**) b
    console.log(a**b)}
// вызов функции result со входными параметрами 2 и напр., степенью 7: 
result(2, 7)

2. Написать скрипт, который выведет 5 строк в консоль таким образом, чтобы в первой строчке выводилось :), во второй :):) и так далее
Пример в консоли:
:)
:):)
:):):)
:):):):)
:):):):):)

// Объявим переменную smile со строковым значением :)
let smile = ':)'
// Объявим переменную x со строковым значением
let x = String();
// Создадим цикл, в котором:
// Объявим переменную i со значением 1 (так как начинаем выводить с первой строки)
// Создадим условие, при котором будет работать тело цикла: i<=5 (т.к. необходимо вывести 5 строк)
for (let i=1; i<=5; i++) {
    // Тело цикла: будет происходить добавление к значению переменной x значения переменной smile
    x = x + smile;
    // Вывод в консоль значения переменной x
    console.log(x)
}

2*. Преобразовать 2 задачу в функцию, принимающую на вход строку, которая и будет выводиться в консоль (как в условии смайлик), а также количество строк для вывода 
e.g. function printSmile(stroka, numberOfRows)

/* Преобразовать 2 задачу в функцию, принимающую на вход строку, которая и будет выводиться в консоль (как в условии смайлик), а также количество строк для вывода 
e.g. function printSmile(stroka, numberOfRows) */

// Создадим функцию smile со входными параметрами stroka, numberOfRows
function smile(stroka, numberOfRows){
    // // Объявим переменную x со строковым значением (эта строка из предыд. задачи не меняется)
    let x = String();
// Заменим в условии (из предыд.задачи 5) на параметр функции numberOfRows, чтобы при вызове функции с параметром numberOfRows цикл отрабатывал согласно этому введенному параметру
for (let i=1; i<=numberOfRows; i++) {
    // Тело цикла: заменим (переменную smile) на параметр функции stroka, чтобы при вызове функции с параметром stroka тело отрабатывало согласно этому введенному параметру 
    x = x + stroka
    // Вывод в консоль значения переменной x (эта строка из предыд. задачи не меняется)
    console.log(x)
}
}
// вызов функции smile со входными параметрами smile - напр., ':)' , numberOfRow, например, 10:
smile(':)', 10)

3**.  Написать функцию, которая принимает на вход слово. Задача функции посчитать и вывести в консоль, сколько в слове гласных, и сколько согласных букв.
e.g. function getWordStructure(word)
В консоли: 
Слово (word) состоит из  (число) гласных и (число) согласных букв

Проверки: 'case', 'Case', 'Check-list'


В консоли: 
Слово (word) состоит из  (число) гласных и (число) согласных букв */

// создадим функцию с параметром word:
function getWordStructure(word){
// объявляем переменную со значением массива, там согласные буквы англ. и рус. языка):
let consonants = ['b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','y','z','б','в','г','д','ж','з','й','к','л','м','н','п','р','с','т','ф','х','ц','ч','ш','щ'];
// объявляем переменную со значением массива, там гласные буквы англ. и рус. языка):
let vowels = ['a', 'e', 'i', 'o', 'u','y','а','е','ё','и','о','у','ы','э','ю','я']; 
// объявляем переменную, которая будет считать кол-во согласных букв в слове:
let count_cons = 0;
// объявляем переменную, которая будет считать кол-во гласных букв в слове:
let count_vow = 0;    
// создаем цикл, в котором проверяется индекс i: 
for(let i = 0; i <word.length; i ++){
//условие: если слово, которое будет вводиться как параметр функции, будет включать согласную любого регистра: 
        if (consonants.includes(word[i].toLowerCase())){
            //прибавление к счетчику согласных +1
            count_cons += 1;
//условие: также если слово, которое будет вводиться как параметр функции, будет включать гласную любого регистра:
        } else if (vowels.includes(word[i].toLowerCase())){
            //прибавление к счетчику гласных +1
            count_vow += 1;
        }
}
// вывод в консоль Слово (word) состоит из  (число) гласных и (число) согласных букв:
console.log (`Слово ${word} состоит из ${count_vow} гласных и ${count_cons} согласных букв`);
    }
// вызов функции getWordStructure с параметром, напр., HELLO:
getWordStructure('HELLO')

4**. Написать функцию, которая проверяет, является ли слово палиндромом
e.g. function isPalindrom(word)

Проверки: 'abba', 'Abba'

1.for (let i = 1; i <= 10; i++) {
console.log(2**i);}



e.g. function isPalindrom(word)
Проверки: 'abba', 'Abba' */

// создадим функцию со входным параметром word:
function isPalindrom(word){
// цикл, в котором i = 0 - это нулевой индекс, (порядковый номер буквы в слове), и если он меньше длины слова, передаваемого в параметр функции, происходит инкрементация: 
for (let i = 0; i <word.length; i ++){
        // в условии if мы сравниваем пары букв в слове (с учетом регистра), и если буква из начала слова !== аналогичной позиции из конца слова:
        if(word[i].toLowerCase() !== word[word.length -1 - i].toLowerCase()){
            // то условие истинно, и происходит возврат false:
            return false;
} else{
            // иначе происходит возврат true:
            return true;
}
}
}
// вывод в консоль вызова функции isPalindrom с параметром, напр., AbbA:
